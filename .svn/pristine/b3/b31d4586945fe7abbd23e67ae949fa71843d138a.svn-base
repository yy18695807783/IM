package com.atguigu.imease.activity;

import android.content.Intent;
import android.os.Bundle;
import android.os.Handler;
import android.os.Message;
import android.support.v7.app.AppCompatActivity;

import com.atguigu.imease.R;
import com.atguigu.imease.model.Model;
import com.atguigu.imease.model.bean.UserInfor;
import com.hyphenate.chat.EMClient;

public class SplishActivity extends AppCompatActivity {

    private Handler handler = new Handler() {
        @Override
        public void handleMessage(Message msg) {
            super.handleMessage(msg);

            if (isFinishing()) {
                return;
            }

            // 跳转到登录页面或者主页面
            toMainOrLogin();

        }
    };

    private void toMainOrLogin() {
        Model.getInstance().getGlobalThreadPool().execute(new Runnable() {
            @Override
            public void run() {
                //分两种情况
                if (EMClient.getInstance().isLoggedInBefore()) {//登陆过
                    //获取登录信息
                    UserInfor account = Model.getInstance().getmUserAccountDao().getAccountByHxid(EMClient.getInstance().getCurrentUser());
                    //跳转登陆界面
                    if (account == null) {
                        //登陆界面
                        Intent intent = new Intent(SplishActivity.this, LoginActivity.class);
                        startActivity(intent);
                    } else {
                        //主界面
                        Intent intent = new Intent(SplishActivity.this, MainActivity.class);
                        startActivity(intent);
                    }

                } else {//没有登陆过
                    //跳转登陆界面
                    Intent intent = new Intent(SplishActivity.this, LoginActivity.class);
                    startActivity(intent);

                }

                //结束当前页面
                finish();

            }
        });
    }

    @Override
    protected void onCreate(Bundle savedInstanceState) {
        super.onCreate(savedInstanceState);
        setContentView(R.layout.activity_splish);
        handler.sendMessageDelayed(Message.obtain(), 2000);

    }

    @Override
    protected void onDestroy() {
        super.onDestroy();
        if (handler != null) {
            handler.removeCallbacksAndMessages(null);
        }
    }
}
